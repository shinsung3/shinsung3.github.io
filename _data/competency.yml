-   main: <mark>반복되는 불필요한 작업</mark> 건들 자체개선을 통해 없애기! (52건 → 0건)
    title: Back Office 내 수기 등록 건 없애기
    problem: |
        * 페이지 구조 상 템플릿 내 코너를 넣어 자유로운 UI를 만들어 사용
        * 그러나 코너 등록 시 겹치는 번호를 처리하는 방법이 없어 기능적으로 대응 불가능
        * 매번 insert를 직접 해줘야하는 문제 발생
        * 전시 파트 특징 중 하나는 자유로운 모듈화 페이지라고 생각합니다. 이러한 페이지 특징을 활용해 하나의 페이지를 템플릿이라 하고 이에 맞춰서 다양한 코너를 넣어서 활용할 수 있었습니다. 이때 가장 큰 문제는 기획자는 다양한 모듈의 조합을 사용할 수 있으나 매 조합마다 IT개발자에게 모듈 코너를 insert해서 조합해달라고 수기 요청을 하였습니다. 이는 개발자에게도 기획자에게도 불필요한 업무라고 생각했습니다. 운영에서는 50건일지라도 개발서버와 STG서버 테스트 모듈까지 포함하면 매년 500건 이상의 테스트 모듈 insert가 이루어졌고, 이를 개선하고자 했습니다.
    solution: | 
        * <mark>자체개선</mark>
        * 이러한 문제를 해결하고자 BO 내 템플릿 추가 시 코너 적용가능하도록 신규 기능 개발
        * 매년 현업에서 수기 요청 건 약 52개 → 현재 0건으로 해결
    competency: |
        IT에게 가장 중요한 것은 <mark>반복되는 불필요한 작업을 줄이는 것</mark>이라고 생각합니다. 저는 이러한 부분을 운영을 하며 <mark>자발적으로 발견</mark>하고 빠르게 적용하여 사용자의 편리성을 높여주기 위해 노력합니다.

-   main: <mark>신규 아이디어</mark>로 이벤트 테스트 자동화 시스템 개발
    title: Selenium 라이브러리를 이용하여 이벤트 테스트 자동화 개발
    problem: |
        * 마케팅 담당자들이 이벤트 개발에 대해서 기본적인 테스트를 진행하지 않음
        * 이벤트 테스트 미흡으로 인한 긴급 배포 건 다수 발생
    solution: | 
        * <mark>자체개선</mark>
        * 이벤트 담당자는 아니었지만 같은 파트 내 이러한 문제를 해결하는 것이 필수적이라고 인지
        * Python에 Selenium 라이브러리를 이용하여 Java-Python Jython 라이브러리 연동하였으나 다양한 사람들의 유지보수를 위해서 변경
        * Java 내 selenium 라이브러리를 jar파일로 적용하여 사람이 누르는 것과 동일한 형태로 테스트를 진행하도록 하여 기본적인 테스트 미흡으로 발생하는 문제를 해결
        * 이벤트 개발로 인한 긴급 배포 건 수 감소
    competency: |
        저는 기존에 있던 시스템을 그대로 수용하기 보다는 <mark>새로운 아이디어</mark>를 적용하기도 합니다.
        특히나 <mark>RPA를 통해 자동화</mark>를 진행했던 경험과 <mark>python을 기반으로 프로젝트</mark>를 했던 경험들을 포함하여
        기존 플랫폼에 이벤트 테스트 자동화 기능을 개발하기도 했습니다. 다양한 경험은 새로운 아이디어를 적용하고 개발하는 데에
        큰 도움이 될 것이라고 생각합니다.

-   main: <mark>사전 장애 방지</mark>를 위한 크리마 API 전체 개선
    title: 인터페이스 히스토리 테이블 누적 데이터 초과로 인하여 발생할 수 있는 장애 사전 대응
    problem: |
        * 인터페이스 히스토리(INF_HIST)에 인터페이스 데이터 저장되나 월에 1000만 건 가까이 누적되어 문제 발생
    solution: | 
        * <mark>자체개선</mark>
        * 단 건 데이터 전송을 List로 변경하여 버전 업(V2)
        * EQL과 H패션몰 동일하게 쓰던 인터페이스 조건에 따라서 분기 처리 (EQL은 배송중일때 데이터전송, H패션몰은 배송완료일때 데이터전송)
        * Chuck 사이즈를 개당 20개씩으로 처리
        * ItemReader를 이용하여 페이징 처리 및 리스트 전송으로 개선
        * 주문 정보 : __36만 건 → 1만건__ (月 97% 감소)
        * 주문 상세 및 클레임 정보 : __67만 건 → 8천 건__ (月 98% 감소)
        * 상품 정보 : __3만 건 → 2천 건__ __(月 94% 감소)__
    competency: |
        장애를 발생한 이후에 원인을 분석하고 찾는 것도 중요하지만 저는 사전에 장애가 발생할 것을 예상하고 코드를 개선하는 것이 필요하다고 생각합니다.
        따라서 다양한 <mark>장애발생 요소</mark>를 <mark>사전에 찾아내어</mark> 기존 개발 건에 대한 개선 작업을 진행했습니다. 

-   main: <mark>새로운 도전</mark>을 위해 스타트업데이에 출품하여 1등
    title: 한섬 패션 이커머스 H패션몰에 라이브 커머스 고객 채팅 분석 솔루션 개발
    solution: | 
        * Python과 Django를 기반으로 빠르고 가볍게 솔루션 개발
        * 텍스트 마이닝 Open API를 활용하여 긍정어, 부정어 분석 기능 개발
        * 가장 많이 사용된 키워드 분석 기능 개발
        * 사내 시스템 도입을 위한 개발
        * MD 현업들의 사용을 위해 Back-Office에 라이브 커머스 채팅 뿐만 아니라 리뷰 텍스트 분석 기능 추가
    competency: |
        저는 새로운 환경에서 빠르게 적용할 수 있도록 <mark>언어의 선택을 유연</mark>하게 할 수 있고,
        <mark>새로운 도전을 주저하지 않습니다.</mark> 필요한 기능에 대한 아이디어가 있다면 언제든지 새롭게 개발하고 도전할 수 있습니다.
